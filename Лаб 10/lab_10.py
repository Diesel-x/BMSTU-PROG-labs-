#–ë–∞—è–Ω–æ–≤ –î–∏—è–∑ –ì–∞–π—Å–∞–µ–≤–∏—á, –ª–∞–±–∞ 10, –≤–∞—Ä 6
#–õ–µ–≤—ã–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ –∏ 3/8

# –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞
# –∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, —Ñ—É–Ω–∫—Ü–∏–∏ –¥–≤—É–º—è —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ (–ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É).
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å –∑–∞–¥–∞—Ç—å –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ
# N1 –∏ N2 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è.

# –î–∞–ª–µ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π, –∑–∞–¥–∞–Ω–Ω–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π
# –º–µ—Ç–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º. –î–ª—è —ç—Ç–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
# –∞–±—Å–æ–ª—é—Ç–Ω—É—é –∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö –∏–∑–º–µ—Ä–µ–Ω–∏–π. –ú–µ—Ç–æ–¥,
# –∏–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å –æ–¥–Ω–∏–º –∏–∑ —Ä–∞–∑–±–∏–µ–Ω–∏–π –¥–∞–ª–æ —Å–∞–º–æ–µ –±–ª–∏–∑–∫–æ–µ –∫ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–æ–π
# –∑–Ω–∞—á–µ–Ω–∏–µ, —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º.
# –ó–∞—Ç–µ–º –¥–ª—è –¥—Ä—É–≥–æ–≥–æ, –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤
# —Ä–∞–∑–±–∏–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é, –Ω–∞ –æ—Å–Ω–æ–≤–µ
# —Ñ–æ—Ä–º—É–ª—ã:
# |ùêº(ùëÅ) ‚àí ùêº(2ùëÅ)| < Œµ

# –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è
# –µ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è.
# –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–∏—Å–∞—Ç—å –≤ –≤–∏–¥–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö
# —Ñ—É–Ω–∫—Ü–∏–π, —á—Ç–æ–±—ã –∏—Ö –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
# –î–ª—è –º–µ—Ç–æ–¥–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö –±–æ–ª–µ–µ –¥–≤—É—Ö —Ç–æ—á–µ–∫ –Ω–∞ –æ–¥–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
# –≤—ã—á–∏—Å–ª–µ–Ω–∏–π, —Å—á–∏—Ç–∞—Ç—å –≤—Å–µ –æ—Ç—Ä–µ–∑–∫–∏ –º–µ–∂–¥—É —Å–æ—Å–µ–¥–Ω–∏–º–∏ —Ç–æ—á–∫–∞–º–∏ –∑–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏
# —Ä–∞–∑–±–∏–µ–Ω–∏—è.
# –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –º–µ—Ç–æ–¥–æ–≤ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—á–∞—Å—Ç–∫–æ–≤
# —Ä–∞–∑–±–∏–µ–Ω–∏—è, –≤ —Ç–∞–±–ª–∏—Ü–µ —Å—Ç–∞–≤–∏—Ç—Å—è –ø—Ä–æ—á–µ—Ä–∫, –æ–¥–Ω–∞–∫–æ —Å–∞–º–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
# –≤—ã–≤–æ–¥–∏—Ç—Å—è.

def f(x):
    # –ó–∞–¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    return x**2

def F(x):
    # –ü–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ f(x) = x^2
    return x**3 / 3

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–ª–∞ –º–µ—Ç–æ–¥–æ–º –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–∫–æ–≤
def left_triangles(a, b, n):
    h = (b - a) / n
    integral = 0
    for i in range(n):
        integral += f(a + i * h)
    integral *= h
    return integral

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–ª–∞ –º–µ—Ç–æ–¥–æ–º 3/8
def simpson_3_8(a, b, n):
    h = (b - a) / n
    integral = f(a) + f(b)
    for i in range(1, n):
        if i % 3 == 0:
            integral += 2 * f(a + i * h)
        else:
            integral += 3 * f(a + i * h)
    integral *= 3 * h / 8
    return integral

#–§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏
def absolute_error(approx, exact):
    return abs(approx - exact)

#–§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏
def relative_error(approx, exact):
    return abs(approx - exact) / abs(exact)

# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è
def find_segments_for_accuracy(method, a, b, epsilon):
    n = 1
    while True:
        I_n = method(a, b, n)
        I_2n = method(a, b, 2 * n)
        if abs(I_n - I_2n) < epsilon:
            return n
        n *= 2

def get_float_input(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

def get_positive_int_input(prompt):
    while True:
        try:
            value = int(input(prompt))
            if value > 0:
                return value
            else:
                print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –Ω—É–ª—è.")
        except ValueError:
            print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

def print_results_table(a, b, n1, n2, integral_left, integral_simpson, exact_value):
    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π:")
    print(f"{'–ú–µ—Ç–æ–¥':<30}{'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤':<25}{'–ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ':<30}{'–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å':<30}{'–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å':<30}")
    print("-" * 160)
    print(f"{'–õ–µ–≤—ã–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏':<30}{n1:<25}{integral_left:<30.7g}{absolute_error(integral_left, exact_value):<30.7g}{relative_error(integral_left, exact_value):<30.7g}")
    if n2 % 3 == 0:
        print(f"{'–ú–µ—Ç–æ–¥ 3/8':<30}{n2:<25}{integral_simpson:<30.7g}{absolute_error(integral_simpson, exact_value):<30.7g}{relative_error(integral_simpson, exact_value):<30.7g}")
    else:
        print(f"{'–ú–µ—Ç–æ–¥ 3/8':<30}{'-':<25}{'-':<30}{'-':<30}{'-':<30}")

def main():
    a = get_float_input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–æ –æ—Ç—Ä–µ–∑–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")
    b = get_float_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è: ")
    n1 = get_positive_int_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤: ")
    
    while True:
        n2 = get_positive_int_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–æ–¥–∞ 3/8 (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–æ 3): ")
        if n2 % 3 == 0:
            break
        else:
            print("–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µc—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è –º–µ—Ç–æ–¥–∞ 3/8 –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–æ 3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    integral_left_triangles = left_triangles(a, b, n1)
    integral_simpson_3_8 = simpson_3_8(a, b, n2)

    print(f"–ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –º–µ—Ç–æ–¥–æ–º –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤: {integral_left_triangles:.7g}")
    print(f"–ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –º–µ—Ç–æ–¥–æ–º 3/8: {integral_simpson_3_8:.7g}")

    exact_value = F(b) - F(a)

    abs_error_left = absolute_error(integral_left_triangles, exact_value)
    rel_error_left = relative_error(integral_left_triangles, exact_value)
    abs_error_simpson = absolute_error(integral_simpson_3_8, exact_value)
    rel_error_simpson = relative_error(integral_simpson_3_8, exact_value)

    print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤: {abs_error_left:.7g}")
    print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤: {rel_error_left:.7g}")
    print(f"–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–∞ 3/8: {abs_error_simpson:.7g}")
    print(f"–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–∞ 3/8: {rel_error_simpson:.7g}")

    print_results_table(a, b, n1, n2, integral_left_triangles, integral_simpson_3_8, exact_value)

    if abs_error_left < abs_error_simpson:
        print("–ú–µ—Ç–æ–¥ –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π.")
        epsilon = get_float_input("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ 3/8: ")
        n_for_accuracy = find_segments_for_accuracy(simpson_3_8, a, b, epsilon)
        print(f"–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º 3/8 —Ç—Ä–µ–±—É–µ—Ç—Å—è {n_for_accuracy} —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è.")
    else:
        print("–ú–µ—Ç–æ–¥ 3/8 –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π.")
        epsilon = get_float_input("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –º–µ—Ç–æ–¥–∞ –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤: ")
        n_for_accuracy = find_segments_for_accuracy(left_triangles, a, b, epsilon)
        print(f"–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º –ª–µ–≤—ã—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è {n_for_accuracy} —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è.")

if __name__ == "__main__":
    main()
