# Баянов Дияз, ИУ7-14Б, Вар 96
# Лабораторная работа №4 “Сумма бесконечного ряда”
# Составить программу вычисления суммы ряда(по варианту) с точностью до члена
# ряда ε. Программа должна позволять задать значение аргумента(если требуется по
# варианту), точность, максимальное количество итераций и шаг печати. Необходимо
# вывести таблицу промежуточных вычислений с заданным шагом(номер итерации,
# значение текущего члена, промежуточное значение суммы) и результат - вычисленное
# значение суммы ряда либо сообщение о том, что за указанное число итераций
# необходимой точности достичь не удалось.

import math as m

x = float(input("Введите х: "))
while x < 0:
    print("Введено некоректное значение")
    x = float(input("Введите значение х: "))

eps = float(input("Точность: "))
while eps <= 0:
    print("Введено некоректное значение")
    eps = float(input("Введите точность: "))

num_of_iter = float(input("Кол-во итераций: "))
while num_of_iter <= 0 or num_of_iter % 1 != 0:  # round()
    print("Введено некоректное значение")
    num_of_iter = float(input("Кол-во итераций: "))

step = float(input("Шаг: "))
while step <= 0 or step % 1 != 0:
    print("Введено некоректное значение")
    step = float(input("Шаг: "))

y = 0
t = x * m.pi / 3  # Член ряда
n = 1

# Выводим заголовок таблицы
print("-" * 46)
print(f"| {'№ итерации':^12} | {'t':^12} | {'s':^12} |")
print("-" * 46)

while n <= num_of_iter and abs(t) > eps and m.isinf(t) == False:
    y += t
    if n % step == 0:
        print(f"| {n:^12.6g} | {t:>12.6g} | {y:>12.6g} |")
    t *= x
    n += 1

print("-" * 46)


# Проверка, достигнута ли точность
if m.isinf(t):
    print("\nРяд бесконечен.")
elif abs(t) > eps:
    print(
        f"\nСумма бесконечного ряда = {y:.6g}, вычислена за {n} итераций.")
else:
    print(f"\nТочность {eps} достигнута за {n} итераций.")
