# –î–∞–Ω—ã –¥–≤–∞ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã—Ö —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞ A –∏ B. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç—Ä–∏—Ü—É
# M, —Ç–∞–∫—É—é —á—Ç–æ
# ùëö.ùëñùëó = ùëé.ùëñ * ùëè.ùëó
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –º–∞—Ç—Ä–∏—Ü—ã.–ó–∞–ø–∏—Å–∞—Ç—å
# –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤ S. –ù–∞–ø–µ—á–∞—Ç–∞—Ç—å –º–∞—Ç—Ä–∏—Ü—É M –≤ –≤–∏–¥–µ –º–∞—Ç—Ä–∏—Ü—ã –∏ —Ä—è–¥–æ–º —Å—Ç–æ–ª–±–µ—Ü S.

import math

def is_perfect_square(n):
    return int(math.sqrt(n)) ** 2 == n


def print_matrix(matrix):
    for row in matrix:
        print(" ".join(map(str, row)))


A, B = [], []

# while True:
#     try:
#         A = list(map(int, input("–í–≤–æ–¥ A: ").split()))
#         if not A:
#             raise ValueError("–ú–∞—Å—Å–∏–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
#         break
#     except ValueError as e:
#         print(f"–û—à–∏–±–∫–∞: {e}\n")

# while True:
#     try:
#         B = list(map(int, input("–í–≤–æ–¥ B: ").split()))
#         if not B:
#             raise ValueError("–ú–∞—Å—Å–∏–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
#         break
#     except ValueError as e:
#         print(f"–û—à–∏–±–∫–∞: {e}\n")


A = [2, 4, 6]
B = [1, 3, 5, 7]

print("\n–ú–∞—Ç—Ä–∏—Ü–∞ A:")
print(A)

print("\n–ú–∞—Ç—Ä–∏—Ü–∞ B:")
print(B)

M = [[a * b for b in B] for a in A]

print("\n–ú–∞—Ç—Ä–∏—Ü–∞ M:")
print_matrix(M)

S = [sum(1 for element in row if is_perfect_square(element)) for row in M]

print("\n–°—Ç–æ–ª–±–µ—Ü S:")
for s in S:
    print(s)
